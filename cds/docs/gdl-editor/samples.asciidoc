= GDL Editor Samples
Rong Chen <rong.chen@cambio.se>, Iago Corbal <iago.corbal@cambio.se>
v0.93, 2014-12-09

FUNDED BY: Cambio Healthcare Systems (http://www.cambio.se)

== Body mass index calculation

This example will describe how to create a simple guideline to calculate the body mass index using the formula: 

image::img/samples/01_bmi-formula.jpg["Figure 1 - BMI ecuation", align="center"]

NOTE: The description of the guide should include all the necessary information to make sure it is used in the correct context.

To add a new rule, we click on the Add rule button. We include the name of the rule and hit Accept.

image::img/samples/02_creating_new_rule.jpg[title="Creating a new rule", align="center"]

After this step is performed, we will begin the rule editing. We should make sure that the elements needed have the correct units. We want to add two conditions: weight is measured in kilograms and height in centimeters. Double clicking twice on the Compare (Attribute) condition, we will add two empty conditions to the rule.

image::img/samples/03_adding_conditions.jpg[title="Adding conditions to specify units", align="center"]

Now we can specify the units for both elements we are going to obtain from the EHR (weight and height). Clicking on the Element attribute link, we can select the attribute we are going to use. Since we don't have yet any archetypes defined on the guide, we will have to click on the Add archetype button to add an archetype reference (in this case Body Weight archetype, see Figure 4). Double click on the archetype or just select it and click on the Accept button. Once the archetype reference is added, we can select an element from it. Archetype references are stored in the definition section of the guideline and can be reused to select several elements from them (see Figure 5).

image::img/samples/04_select_element_instance.jpg[title="Select element instance", align="center"]

image::img/samples/05_adding_body_weight.jpg[title="Adding body weigh archetype reference", align="center"]

image::img/samples/06_selecting_element_instance.jpg[title="Selecting an element from the archetype", align="center"]

After selecting the element, we will be presented with a new dialog for selecting the attribute of the element (see Figure 6). We choose the units attribute and click Accept.

image::img/samples/07_selecting_attribute.jpg[title="Select attribute", align="center"]

Now we can select the operator and the units (kg) we want to specify.

image::img/samples/08_defining_units.jpg[title="Specifying kg units for body weight", align="center"]

We can do the same procedure for the archetype Height/Length, using the cm units.  Next we will need to specify that we are interested at calculating the BMI from only the most recent measurements of height and weight. To do so, we need go the definition tab (Figure 8). Double click on the Predicate (Function) and drag it inside the body_weight archetype instantiation. Once it is added, click on the element and select Event time. After selecting the element we set it at max so that it will always select the most recent measurement of weight. The same process can be repeated for the Height/Length archetype.

image::img/samples/09_predicate_function_for_weight.jpg[title="Predicate (Function) for Weight", align="center"]

Next we will need to add an action that will update the magnitude attribute of the element Body Mass Index archetype. We double click on the Action Set (Attribute), located at the lower panel. We follow the same steps as seem before for selecting units, but instead select magnitude attribute. By now, the rule should look like Figure 9.

image::img/samples/10_bmi_magnitude_selected.jpg[title="BMI magnitude selected", align="center"]

Last part requires defining the expression for calculating the BMI. We click on the Expression link to open the expression editor and enter the equation '(weight/( (height/100)^2) )'. Click on Accept button to add the expression to the action. 

NOTE: Expressions on current version must follow the pattern '(expression operator expression)'

image::img/samples/11_edit_expression_for_bmi.jpg[title="Expression for BMI calculation", align="center"]

We can now repeat the same task to set units and precision of the element calculated.

image::img/samples/12_bmi_actions.jpg[title="BMI calculation actions", align="center"]

Now the guide is ready for testing. We use the Run action to see if the rule is behaving properly.

image::img/samples/13_form_generator_for_bmi.jpg[title="Form generator calculating BMI", align="center"]

A final version of the GDL file can be found at <<Appendix_A>>.


== CHA2DS2-VASC Calculation

CHA2DS2-VASc is a clinical prediction score for estimating risk of stroke in patients with non -rheumatic atrial fibrillation (AF).

Following, is an example on how to create a guideline in GDL in order to perform this calculation automatically.

image::img/samples/14_cha2ds2-vasc_table.jpg[title="CHA2DS2-VASC table", align="center"]


=== Overview

Before we can begin building the GDL file for CHA2DS2-VASc, we need to create an archetype that will store the results of the different parameters that are needed for the calculation of the total score, as well as the result of the total score (Figure 14). The complete archetype defined can be found on <<Appendix_B>>.

image::img/samples/15_overview_of_the_cha2ds2vasc_score_calculation_guideline.jpg[title="Overview of the CHA2DS2VASc Score calculation guideline", align="center"]

Once the archetype is ready we can start building the GDL file. The whole process is separated in 5 steps:

1. Creating definitions
2. Creating rules
3. Creating preconditions
4. Creating bindings
5. Executing


=== Creating definitions

As shown in Figure 14 we need to instantiate two archetypes and one template (for each diagnosis).

We start first with the archetype that will store the results of the calculation.

To do so we double click (or click and drag) on "Archetype instantiation" and we select the openEHR-EHR-OBSERVATION.chadsvas_score.v1 archetype. Before clicking on "Accept" make sure to set the Domain to "CDS" since these will be data generated by GDL.

The next step is to instantiate the elements that will be used from this archetype. In this archetype we need all the available elements (except the "Event time") so we click and drag "Element instantiation" and we place it inside the definition of openEHR-EHR-OBSERVATION.chadsvas_score.v1.

Next we click on "Element" and we select the first element in the list. We repeat the same process until the definition looks like in Figure 15.

image::img/samples/16_instantiation_of_openEHR-EHR-OBSERVATION_chadsvas_score_v1.jpg[title="Instantiation of openEHR-EHR-OBSERVATION.chadsvas_score.v1", align="center"]

The next archetype to instantiate is the openEHR-EHR-OBSERVATION.basic_demographic.v1. Once again we double click on "Archetype instantiation" and we select the archetype. Before clicking on "Accept" make sure that the Domain is set to "EHR" since these are data that in a normal setting would derive from the EHR record of a patient.

Next, repeat the same steps as before in order to instantiate the elements for "Birthdate" and "Gender".

NOTE: Since we are probably going to be interested on the latest information regarding the gender and birthdate, we need to make sure that the guideline is including only the most recent data in the calculation. To do so we click and drag "Predicate (Function)" and we place it inside the definition of openEHR-EHR-OBSERVATION.basic_demographic.v1. Next, we click on "Element", we select "Event time" and we set the operator to "max".

The definition should look like in Figure 16.

image::img/samples/17_instantiation_of_openEHR-EHR-OBSERVATION_basic_demographic_v1.jpg[title="Instantiation of openEHR-EHR-OBSERVATION.basic_demographic.v1", align="center"]

Once the definition for the "basic_demographic" archetype is ready, we can start creating the definitions for the "diagnosis_icd10" template. Just as with the archetypes we double click on "Archetype instantiation" only this time we click on the "Templates" tab in the Archetypes/Templates window and we select the "diagnosis_icd10" template (Figure 17).

image::img/samples/18_instantiating_diagnosis_icd10_template.jpg[title="Instantiating diagnosis_icd10 template", align="center"]

Once we have finished instantiating the template we can instantiate the element of diagnosis from the template just as in the previous examples (Figure 18).

image::img/samples/19_diagnosis_instantiation.jpg[title="Diagnosis instantiation", align="center"]

NOTE: Because we are going to instantiate the template for each relevant diagnosis it is better that we rename the element of Diagnosis according to each diagnosis. To do so we click on "Diagnosis" (Figure 19) and we rename the element to Congestive heart failure diagnosis (we add the word diagnosis to the name in order to differentiate from the "Congestive heart failure" element of the "chadsvas_score" archetype) which is the first item on the CHA2DS2-VASc scale.

image::img/samples/20_renaming_diagnosis_to_congestive_heart_failure_diagnosis.jpg[title="Renaming Diagnosis to Congestive heart failure diagnosis", align="center"]

The following step is to specify that we are only interested on the instances that contain only congestive heart failure problems.

To filter all other problems we click and drag "Predicate (Data value)" inside the template definition. We click on the element, we select Diagnosis and we set the operator to "is_a".

Lastly, we click on "DataValue" and on the next window we click on "Select term". This will open a list with all the available local terms that we have created so far, and in there we select the "Congestive heart failure diagnosis" term (Figure 20).

image::img/samples/21_filtering_of_diagnosis_using_predicate.jpg[title="Filtering of diagnosis using predicate", align="center"]

By now the definitions should look as in Figure 21.

image::img/samples/22_defined_archetypes_and_templates.jpg[title="Defined archetypes and templates", align="center"]

Repeat the same process for the rest of the diagnosis including atrial fibrillation until the definitions section looks like Figure 22.

image::img/samples/23_complete_definitions_list.jpg[title="Complete definitions list", align="center"]

Once we have finished creating the rest of the definitions we can start creating the rules for calculating each parameter as well as the total score.


=== Creating rules

The first rule that we want to create is a default rule that will set default values to the content of the "chadsvas_score" archetype at the first step of the execution.

We create a rule with a name e.g. "Set default", where we set all possible diagnosis to "Absent".  To do so, we create five conditions using "Element exists" for each relevant diagnosis from the "chadsvas_score" archetype in order to check for the non-existence of a value in these elements.

In the "Actions" we create five actions using "Set (DataValue)" that will set each diagnosis to "Absent".

NOTE: Since the age and gender should always be known there is no need to create a default value for those.

The resulting rule should look like the one shown on Figure 23.

image::img/samples/24_set_default_rule.jpg[title="Set default rule", align="center"]

Now the first time the guide is executed, we have a clean instance of the archetype with the values diagnosis set to absent. Next step requires setting these diagnosis, if found on the patient's EHR. We can start with any of the diagnosis; in this case we will use congestive heart failure.

We create a new rule with the name "Set CHF present"; in here we will check if the patient has the diagnosis of congestive heart failure, if so, we will set the value of the element Congestive heart failure in the "chadsvas_score" archetype instance to "Present".

We create a condition using "Element exists" where we select the element "Congestive heart failure diagnosis" from the list (Figure 24) and we set it to "exists".

Lastly we create an action using the "Set (DataValue)" where we select the element of Congestive heart failure from the list and we set it to "Present". The resulting rule should look as in Figure 25.

image::img/samples/25_adding_congestive_heart_failure_diagnosis_element_to_the_conditions.jpg[title="Adding congestive heart failure diagnosis element to the conditions", align="center"]

image::img/samples/26_set_chf_present_rule.jpg[title="Set CHF present rule", align="center"]

Once we have finished creating the same rules for the other diagnosis parts of CHA2DS2-VASc we can start creating the remaining rules for the gender and the age.

In order to set the gender of the patient we create a new rule with the name "Set gender female". In here we will check if the patient's gender is female and if so to set the value of the element gender in the "chadsvas_score" archetype to "Female".

We create a condition using "Compare (DataValue)" where we select the EHR element "Gender" from the list and as "DataValue" Female.

Finally we create an action using the "Set (DataValue)" where we select the element "Gender" from the list and Female as "DataValue". The resulting rule should look as in Figure 26. We can repeat the same process for the male gender.

image::img/samples/27_set_gender_female_rule.jpg[title="Set gender female rule", align="center"]

The next set of rules is for calculating the age of the patient. We create a new rule with the name "Set age above or equals to 75". In there we create a new condition using the "Compare (Attribute)" and we click on the element attribute link where we select the value of the "Birthdate" element from the available list (Figure 27). 

image::img/samples/28_selecting_birthdate_value.jpg[title="Selecting Birthdate.value", align="center"]

Next we set the operator to "<=" and we click on "Expression". This will open the Expression editor where we can enter the equation "Current Date/Time -75, a" which will calculate the age of the patient (Figure 28).

image::img/samples/29_expression_for_age_calculation.jpg[title="Expression for Age calculation", align="center"]

After setting the Expression, we can create a new action using "Set (DataValue)". We select the element Age from the available list and we set it to "Above or equals to 75". By now the rule should look like Figure 29. The same process can be repeated for the ages below 65 and between 65 and 74 (Figures 30 and 31).

image::img/samples/30_set_age_above_or_equals_to_75_rule.jpg[title="Set age above or equals to 75 rule", align="center"]

image::img/samples/31_set_age_between_65-74_rule.jpg[title="Set age between 65-74 rule", align="center"]

image::img/samples/32_set_age_below_65_rule.jpg[title="Set age below 65 rule", align="center"]

The last rule is for calculating the CHA2DS2-VASc score. We create a new action using the "Set (Attribute)" and we click on "Element attribute". This will open a list from where we select the "magnitude" of the "Total score" element (Figure 32).

image::img/samples/33_selecting_total score.magnitude.jpg[title="Selecting Total score.magnitude", align="center"]

Finally we open the expression editor where we add all the elements that are needed for CHA2DS2-VASc (Figure 33).

image::img/samples/34_expression_for_calculation_of_cha2ds2-vasc_score.jpg[title="Expression for calculation of CHA2DS2-VASc score", align="center"]

Once we have finished setting up all the rules we can now set a precondition so the guideline runs only for patients affected by atrial fibrillation.


=== Creating preconditions

In order to create a precondition we click on the "Preconditions" tab and we create a new condition using "Element exists" which will assess the diagnosis of Atrial fibrillation. The resulting preconditions should be as in Figure 34.

image::img/samples/35_precondition_for_atrial_fibrillation.jpg[title="Precondition for Atrial fibrillation", align="center"]


=== Creating bindings

This is the final step before we are able to execute the guideline. Since the diagnosis of each patient is expected to be coded using terminologies such as ICD10 or SNOMED-CT we need to create bindings to the necessary codes of each diagnosis. In this example we are going to creating bindings from the ICD10 terminology.

In order to do so we click on the button "Add binding" and we select ICD10 from the list of available terminologies (Figure 35).

image::img/samples/36_adding_icd10_terminology.jpg[title="Adding ICD10 terminology", align="center"]

This will bring us to the "Binding" tab where we can create the bindings between the external ICD10 codes and the local terms. To do so we click on the "+" icon and then on "Select" which will bring up a list with all the available local terms. From the list we select the "Congestive heart failure diagnosis" term (Figure 36).

image::img/samples/37_adding_local_terms_for_binding.jpg[title="Adding local terms for binding", align="center"]

We repeat the same process for all of the terms that end with the word "diagnosis". By now the bindings section should look as in Figure 37.

image::img/samples/38_list_of_local_diagnosis_terms_for_binding.jpg[title="List of local diagnosis terms for binding", align="center"]

In order to complete the bindings we need to assign the external ICD10 codes for each diagnosis. This is possible in two ways either by double clicking on the "Terminology codes" field of each local term and manually entering the codes separated with a coma, or by double clicking on the search icon and selecting the necessary codes from the available list (Figure 38). 

image::img/samples/39_list_of_available_icd10_codes.jpg[title="List of available ICD10 codes", align="center"]

The final list with all the ICD10 codes that are used for this example can be seen in Figure 39.

image::img/samples/40_icd10_terminology_binding_for_CHA2DS2-VASc.jpg[title="ICD10 terminology binding for CHA2DS2-VASc", align="center"]


=== Executing

The guideline is now ready for execution. We click on the "Run" button and we can start calculating the CHA2DS2-VASc score.

image::img/samples/41_execution_of_cha2ds2-vasc_score_calculation.jpg[title="Execution of CHA2DS2VASc score calculation", align="center"]

A version of the final GDL file can be found at <<Appendix_B>>.

[[Appendix_A]]
== Appendix A: BMI guideline

----
include::../../../cm/guidelines/BMI.Calculation.v1.gdl[]
----

[[Appendix_B]]
== Appendix B: CHA2DS2-VASc guideline

----
include::../../../cm/guidelines/CHA2DS2VASc_Score_calculation.v1.gdl[]
----

